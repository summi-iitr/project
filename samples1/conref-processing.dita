<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Composite//EN" "concept.dtd">
<concept id="concept_wf2_3sb_lq" xml:lang="en-us">
 <title><ph>(ph)_0_Processing conrefs</ph></title>
 <shortdesc>(shortdesc)_1_When processing content references, DITA processors compare the
  restrictions of each context to ensure that the conrefed content is valid in its new
  context.</shortdesc>
 <prolog>
  <metadata>
   <keywords>
    <indexterm>conref<indexterm>(indexterm)_2_processing expectations</indexterm><indexterm>(indexterm)_3_validity
      of</indexterm></indexterm>
    <indexterm>generalization<indexterm>(indexterm)_4_conref resolution</indexterm></indexterm>
    <indexterm>processing<indexterm>(indexterm)_5_conrefs</indexterm></indexterm>
    <indexterm>processing expectations<indexterm>(indexterm)_6_conrefs, validity
      of</indexterm><indexterm>(indexterm)_7_generalization during conref resolution</indexterm></indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
  <p><ph>(ph)_8_Except where allowed by weak constraints,</ph> a conref processor
    <term outputclass="RFC-2119">(term)_9_MUST NOT</term> permit resolution of a reuse
   relationship that could be rendered invalid under the rules of either the reused or reusing
   content.</p>
  <!--<draft-comment author="Kristen Eberlein" time="19 January 2015"><p>We need to ensure that the above statement, modified as a result of the targeted review, fits with new content (still being added, as a result of the targeted review of the constraints material) about weak and strong constraints.</p><p>Also, Michael Priestley should review the statement; we (spec editors) know that he cares passionately about this area :)</p></draft-comment>-->
  <note>The DITA <xmlatt>(xmlatt)_10_conref</xmlatt> attribute <ph>(ph)_11_is</ph> a transclusion
   mechanism similar to XInclude and to HyTime value references. DITA differs from these mechanisms,
   however, in that conref validity does not apply simply to the current content at the time of
   replacement, but to the possible content given the restrictions of both the referencing document
   type and the referenced document type.</note>
  <p>When pulling content with the conref mechanism, if the referenced element is the same type as
   the referencing element, and the <ph>(ph)_12_set</ph> of domains declared on the
    <xmlatt>(xmlatt)_13_domains</xmlatt> attribute in the referenced topic or map instance is the same as or a
   subset of the domains declared in the referencing document, the element set allowed in the
   referenced element is guaranteed to be the same as, or a subset of, the element set allowed in
   the referencing element.</p>
  <p>When pushing content with the conref mechanism, the domain checking algorithm is reversed. In
   this case, if the set of domains declared on the <xmlatt>(xmlatt)_14_domains</xmlatt> attribute in the
   referencing topic or map instance is the same as or a subset of the domains declared in the
   referenced document, the element set allowed in the pushed content is guaranteed to be the same
   as, or a subset of, the element set allowed in the new location.</p>
  <p>In both cases, processors resolving conrefs <term outputclass="RFC-2119">(term)_15_SHOULD</term> tolerate specializations of valid elements and generalize
   elements in the pushed or pulled content fragment as needed for the resolving context.</p>
  <!--<p>All replacement of content based on <xmlatt>conref</xmlatt> occurs after parsing of the document but prior to any styling or other transformational or presentational operations on the full topic.</p>-->
 </conbody>
</concept>